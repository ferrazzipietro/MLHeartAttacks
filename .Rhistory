par.set = ps,
control = control_grid,
measures = list(tpr),
show.info = FALSE)
parallelStop()
tuning_results_surv
res_iters_surv <- getTuneResultOptPath(tuning_results_surv)
t_surv <- res_iters_surv %>% dplyr::select(selected.learner, tpr.test.mean)
p_surv <- ggplot(t_surv, aes(tpr.test.mean, selected.learner)) +
geom_boxplot(aes(fill = selected.learner))  +
labs(x = "True Positive Rate (Surv)", y = "") +scale_fill_brewer(palette="Blues")
ggarrange(p_surv, p_fs, ncol = 2, nrow = 1, common.legend = TRUE, legend = "right")
fv2 <- generateFilterValuesData(surv_task, method = "FSelectorRcpp_information.gain")
plotFilterValues(fv2, feat.type.cols = TRUE) + ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggtitle("Filter Selection \n Information Gain") + scale_fill_brewer(palette="Blues")
fv2$data[order(-value)]
parallelStartSocket(5)
parallelStartSocket(5)
set.seed(1234)
tuning_results_surv_fs <- tuneParams(learner = lrn,
task = surv_task_fs,
resampling = desc_inner_surv_fs,
par.set = ps,
control = control_grid,
measures = list(tpr),
show.info = FALSE)
data_surv_fs <- as.data.frame(data_surv) %>% dplyr::select(Event, Creatinine, Ejection.Fraction, Ejection.Fraction_Diabetes, Sodium)
surv_task_fs <- makeClassifTask(id = "HeartFailure", data = data_surv_fs, target = "Event", positive = 1)
set.seed(1234)
desc_inner_surv_fs <- makeResampleInstance("RepCV", reps = 5,  folds = 2, task = surv_task_fs, stratify = TRUE)
set.seed(1234)
tuning_results_surv_fs <- tuneParams(learner = lrn,
task = surv_task_fs,
resampling = desc_inner_surv_fs,
par.set = ps,
control = control_grid,
measures = list(tpr),
show.info = FALSE)
res_iters_surv_fs <- getTuneResultOptPath(tuning_results_surv_fs)
t_surv_fs <- res_iters_surv_fs %>% dplyr::select(selected.learner, tpr.test.mean)
p_surv_fs <- ggplot(t_surv_fs, aes(tpr.test.mean, selected.learner)) +
geom_boxplot(aes(fill = selected.learner))  +
labs(x = "True Positive Rate (Surv + FSel)", y = "")  +
scale_fill_brewer(palette="Blues")
res1 <- t_surv %>% group_by(selected.learner) %>% summarise(MedianAllFeat=median(tpr.test.mean), MeanAllFeat=mean(tpr.test.mean))
res2 <- t_surv_fs %>% group_by(selected.learner) %>% summarise(MedianFSel=median(tpr.test.mean), MeanFSel=mean(tpr.test.mean))
comparison <- full_join(res1, res2) %>% relocate(selected.learner, MedianAllFeat, MedianFSel)
comparison
tuning_results_surv_fs
# Obtaining best iteration for each learner (selecting features)
best_res_surv <- res_iters_surv_fs %>% group_by(selected.learner) %>% slice(which.max(tpr.test.mean)) %>%
relocate(tpr.test.mean, .after = selected.learner)
temp2 <- melt(as.data.frame(best_res_surv)) %>% dplyr::select(-error.message) %>% drop_na()
final_data_surv <- data_surv_tot %>% dplyr::select(Event, Creatinine, Ejection.Fraction, Ejection.Fraction_Diabetes, Sodium)
final_surv_task <- makeClassifTask(id = "HeartFailure", data = final_data_surv, target = "Event", positive = 1)
set.seed(1234)
partition_outer_surv <- makeResampleInstance(desc_outer, final_surv_task)
# prueba_learner <- makeLearner("classif.rpart", minsplit = 21, maxdepth = 5)
# prueba_learner <- makeLearner("classif.ranger", mtry = 2, num.trees = 1230, min.node.size = 39)
prueba_learner <- makeLearner("classif.randomForest", mtry = 2, ntree = 943, nodesize = 42)
set.seed(1234)
prueba_results <- resample(learner = prueba_learner,
task = final_surv_task,
resampling = partition_outer_surv,
measures = list(tpr),
models = TRUE,
show.info = TRUE)
library(tidyverse)
library(gridExtra)
library(GGally)
library(ggthemes) # Load
library(ggpubr)
library(ggplot2)
library(DataExplorer)
library(survival)
library(survminer)
library(MASS)
library(skimr)
library(corrplot)
library(tidyverse)
library(mlr)
library(mlrCPO)
setwd("~/Desktop/ML/MLHeartAttacks")
#setwd("C:/Users/marit/OneDrive - UniversitÃ© Libre de Bruxelles/Bureau/BDMA/UPC/ML/PROJECT")
data <- read.csv('Heart failure.csv', sep=";") #heart....
data.table <- data
data <- data %>% as_tibble()
n <- nrow(data)
data <- data%>% mutate(Event=as.factor(data$Event),
Gender=as.factor(Gender),
Smoking=as.factor(Smoking),
Diabetes=as.factor(Diabetes),
BP=as.factor(BP),
Anaemia=as.factor(Anaemia))
desc_outer <- makeResampleDesc("Holdout", split = 3/4, stratify = TRUE)
final_task <- makeClassifTask(id = "HeartFailure", data = data, target = "Event", positive = 1)
set.seed(1234)
partition_outer <- makeResampleInstance(desc_outer, final_task)
train.idxs <- partition_outer$train.inds[[1]]
test.idxs <- partition_outer$test.inds[[1]]
tot <- data
test <- tot[-train.idxs,]
train <- tot[train.idxs,]
data <- as.data.frame(train)
# necessary for survival models
tot.table <- data.table
test.table <- tot.table[-train.idxs,]
train.table <- tot.table[train.idxs,]
data.table <- train.table
g <- ggplot(data, aes(y=TIME))
mycolors <- c("Corr"="navy")
ggpairs(data %>% dplyr::select(Age, Ejection.Fraction, Sodium,
Creatinine,Pletelets, CPK ),
aes(col=rep("Corr",224),
fill=rep("Corr",224),
alpha = 0.4))  +
scale_fill_manual(values = mycolors,
aesthetics = c("colour", "fill"))
g <- ggplot(data, aes(y=TIME))
mycolors <- c("Corr"="cadetblue1")
ggpairs(data %>% dplyr::select(Age, Ejection.Fraction, Sodium,
Creatinine,Pletelets, CPK ),
aes(col=rep("Corr",224),
fill=rep("Corr",224),
alpha = 0.4))  +
scale_fill_manual(values = mycolors,
aesthetics = c("colour", "fill"))
g <- ggplot(data, aes(y=TIME))
mycolors <- c("Corr"="deepskyblue")
ggpairs(data %>% dplyr::select(Age, Ejection.Fraction, Sodium,
Creatinine,Pletelets, CPK ),
aes(col=rep("Corr",224),
fill=rep("Corr",224),
alpha = 0.4))  +
scale_fill_manual(values = mycolors,
aesthetics = c("colour", "fill"))
plot_bar(data,
ncol    = 3,
title   = "Observations per value",
ggtheme = theme_bw(),
alpha=0.5
theme_config = list(plot.title = element_text(size = 16, face = "bold"),
g <- ggplot(data,aes(col=rep("Corr",224), fill=rep("Corr",224)))
plot_bar(data,
ncol    = 3,
title   = "Observations per value",
ggtheme = theme_bw(),
alpha=0.5
theme_config = list(plot.title = element_text(size = 16, face = "bold"),
g <- ggplot(data,aes(col=rep("Corr",224), fill=rep("Corr",224)))
plot_bar(data,
ncol    = 3,
title   = "Observations per value",
ggtheme = theme_bw(),
alpha=0.5,
theme_config = list(plot.title = element_text(size = 16, face = "bold"),
strip.text = element_text(colour = 1, size = 10, face = 2),
legend.position = "none"))
library(ltm)
cat("Biserial Correlation between Ejection.Fraction and Event is: ", biserial.cor(train$Ejection.Fraction, train$Event))
cat("Biserial Correlation between Ejection.Fraction and Event is: ", biserial.cor(train$Creatinine, train$Event))
g <- ggplot(data, aes(y=TIME))
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), fill=Gender)) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), fill=Smoking)) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), fill=Diabetes)) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), fill=BP)) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), fill=Anaemia)) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(ggarrange(g2,g3,g4, ncol=3, nrow=1) ,ggarrange(g5,g6), ncol = 1, nrow = 2, align="h", widths = c(0.05, 0.05, 0.5)) %>%
annotate_figure(top=text_grob("TIME",face="bold"))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), fill=Event),
varwidth=FALSE) +
labs(title="",x="Event", y = "TIME", color="Event") +
scale_fill_brewer(palette="Blues")  +
theme_minimal()
g1 + theme(axis.text=element_text(size=8),
axis.title=element_text(size=9),
legend.title =element_text(size=9) ,
legend.text =element_text(size=9))
g <- ggplot(data, aes(y=Age))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), fill=Event)) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), fill=Gender)) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), fill=Smoking)) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), fill=Diabetes)) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), fill=BP)) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), fill=Anaemia)) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Age", face="bold"))
g <- ggplot(data, aes(y=Ejection.Fraction))
g1 <- g + geom_boxplot(aes(x=as_factor(Event), fill=Event)) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), fill=Gender)) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), fill=Smoking)) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), fill=Diabetes)) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), fill=BP)) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), fill=Anaemia)) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Ejection.Fraction",
face="bold"))
g <- ggplot(data, aes(y=Sodium))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6, ncol = 3, nrow = 2) %>%
annotate_figure(top=text_grob("Sodium", face="bold"))
g <- ggplot(data, aes(y=Sodium))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6, ncol = 3, nrow = 2) %>%
annotate_figure(top=text_grob("Sodium", face="bold"))
g <- ggplot(data, aes(y=Sodium))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), fill=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), fill=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), fill=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), fill=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), fill=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), fill=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6, ncol = 3, nrow = 2) %>%
annotate_figure(top=text_grob("Sodium", face="bold"))
g <- ggplot(data, aes(y=Pletelets))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), fill=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), fill=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), fill=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), fill=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), fill=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), fill=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6, ncol = 3, nrow = 2) %>%
annotate_figure(top=text_grob("Pletelets", face="bold"))
data_for_creatinine <- data %>% dplyr::select(Creatinine)
idxLessThan5 <- data_for_creatinine$Creatinine<5
LessThan5 <- data_for_creatinine$Creatinine
LessThan5[! idxLessThan5]=NA
data_for_creatinine <- data_for_creatinine %>% add_column( LessThan5 = LessThan5)
ggplot(data_for_creatinine) + stat_density(aes(Creatinine), adjust = 2, alpha=1, col=1,geom="line") +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold")) +
stat_density(aes(data_for_creatinine$LessThan5), adjust = 2, alpha=1, fill=2, col=2,geom="line")
ggplot(data_for_creatinine) + stat_density(aes(Creatinine), adjust = 2, alpha=1, col=1,geom="line") +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold")) +
stat_density(aes(data_for_creatinine$LessThan5), adjust = 2, alpha=1, fill=2, col="navy",geom="line")
ggplot(data_for_creatinine) + stat_density(aes(Creatinine), adjust = 2, alpha=1, col=(lightblue),geom="line") +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold")) +
stat_density(aes(data_for_creatinine$LessThan5), adjust = 2, alpha=1, fill=2, col="navy",geom="line")
ggplot(data_for_creatinine) + stat_density(aes(Creatinine), adjust = 2, alpha=1, col="lightblue",geom="line") +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold")) +
stat_density(aes(data_for_creatinine$LessThan5), adjust = 2, alpha=1, fill=2, col="navy",geom="line")
g <- ggplot(data %>% filter(Creatinine<5), aes(y=Creatinine))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), fill=as.factor(Event)), coef=2.5) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), fill=as.factor(Gender)), coef=2.5) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), fill=as.factor(Smoking)), coef=2.5) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), fill=as.factor(Diabetes)), coef=2.5) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), fill=as.factor(BP)), coef=2.5) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), fill=as.factor(Anaemia)), coef=2.5) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Creatinine",
face="bold"))
ggplot(data) + stat_density(aes(CPK), adjust = 2,
alpha=0.8) +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold"))
ggplot(data) + stat_density(aes(CPK), adjust = 2,
alpha=0.7, col="navy") +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold"))
ggplot(data) + stat_density(aes(CPK), adjust = 2,
alpha=0.7, col="navy", fill="lightblue") +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold"))
g <- ggplot(data %>% filter(CPK<4000), aes(y=CPK))
g1 <- g + geom_boxplot(aes(x=as_factor(Event), fill=Event)) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), fill=Gender)) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), fill=Smoking)) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), fill=Diabetes)) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), fill=BP)) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), fill=Anaemia)) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("CPK", face="bold"))
col <- scale_color_gradient(high=1, low = 0,
n.breaks=4,
breaks = waiver())
g <- ggplot(data, aes(col=Event))
g1 <- g + geom_point(aes(x=Sodium, y=Age),lwd=1)
g2 <- g + geom_point(aes(x=Sodium,  y=Creatinine),lwd=1)
g3 <- g + geom_point(aes(x=Sodium, y=CPK),lwd=1)
g4 <- g + geom_point(aes(x=Sodium, y=Pletelets),lwd=1)
g5 <- g + geom_point(aes(x=Sodium, y=Ejection.Fraction),lwd=1)
g6 <- g + geom_point(aes(x=CPK, y=Age),lwd=1)
g7 <- g + geom_point(aes(x=CPK, y=Creatinine),lwd=1)
g8 <- g + geom_point(aes(x=CPK, y=Pletelets),lwd=1)
g9 <- g + geom_point(aes(x=CPK, y=Ejection.Fraction),lwd=1)
g10 <- g + geom_point(aes(x=Pletelets, y=Creatinine),lwd=1)
g11 <- g + geom_point(aes(x=Pletelets, y=Age),lwd=1)
g12 <- g + geom_point(aes(x=Pletelets, y=Ejection.Fraction),lwd=1)
g13 <- g + geom_point(aes(x=Age, y=CPK), lwd=1)
g14 <- g + geom_point(aes(x=Age, y=Ejection.Fraction), lwd=1)
g15 <- g + geom_point(aes(x=CPK, y=Ejection.Fraction), lwd=1)
ggarrange(g1,g2,g3,g4,g5,g6,g7,g8,g9,g10,g11,g12,g13,g14,g15,
ncol = 3, nrow = 5, common.legend = TRUE) %>%
annotate_figure(top=text_grob("Distribution of events over pairs of var", face="bold"))
s1 <- Surv(data$TIME, data$Event)
surv_m1 <- survfit(s1~data$Gender, error="greenwood",
conf.type="log", se.fit=TRUE, conf.int=0.95,
data=data)
par(mfrow=c(3,2))
g <- list()
Evento <- as.numeric(levels(as.factor(data$Event)))[as.factor(data$Event)]
data$Evento=Evento
g[[1]] <- ggsurvplot(survfit(Surv(TIME, (Evento))~Gender, data=data),
conf.int=T, pval.method=T, log.rank.weights="1", data=data, palette = c("navy","lightblue"), legend="none") + labs(x="Time", y="Survival for Gender")
g[[2]] <- ggsurvplot(survfit(Surv(TIME, (Evento))~Smoking, data=data),
conf.int=T, pval.method=T, log.rank.weights="1", data=data, palette = c("navy","lightblue"), legend="none") + labs(x="Time", y="Survival for Smoking")
g[[3]] <- ggsurvplot(survfit(Surv(TIME, (Evento))~Diabetes, data=data),
conf.int=T, pval.method=T, log.rank.weights="1", data=data, palette = c("navy","lightblue"), legend="none") + labs(x="Time", y="Survival for Diabetes")
g[[4]] <- ggsurvplot(survfit(Surv(TIME, (Evento))~BP, data=data),
conf.int=T, pval.method=T, log.rank.weights="1", data=data, palette = c("navy","lightblue"), legend="none") + labs(x="Time", y="Survival for BP")
g[[5]] <- ggsurvplot(survfit(Surv(TIME, (Evento))~Anaemia, data=data),
conf.int=T, pval.method=T, log.rank.weights="1", data=data, palette = c("navy","lightblue"), legend="none") + labs(x="Time", y="Survival for Anaemia")
arrange_ggsurvplots(g, print = TRUE,
ncol = 3, nrow = 2, risk.table.height = 0.4)
# ggarrange(g1,g2,g3,g4,g5,
#           ncol = 2, nrow = 3) %>%
#   annotate_figure(top=text_grob("Distribution of events over pairs of var",
#                                 face="bold"))

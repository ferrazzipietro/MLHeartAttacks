# ## CREATING THE LIST TO CLEAN THE CODE: NEED TO CREATE A LIST OF gg OBJECTS
# age_vs_factors <- list()
# factors_names <- c("Event", "Gender", "Smoking", "Diabetes", "BP","Anaemia")
# factors <- data %>% dplyr::select(all_of(factors_names))
#
# for(factor in 1:length(factors_names)){
#   factor <- data %>% dplyr::select(all_of(factors_names[i])) %>% as_factor
#   age_vs_factors[[i]] <- g + geom_boxplot(aes(x=factor, color=factor), coef=2) +
#     labs(title="",x="", y = "", color=factors_names[i])  +
#     scale_fill_brewer(palette="Blues") +
#     theme_minimal()
# }
## OLD VERSION
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Age",
face="bold"))
g <- ggplot(data, aes(y=Ejection.Fraction))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Ejection.Fraction",
face="bold"))
g <- ggplot(data, aes(y=Sodium))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Sodium",
face="bold"))
g <- ggplot(data, aes(y=Pletelets))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Pletelets",
face="bold"))
data_for_creatinine <- data %>% dplyr::select(Creatinine)
idxLessThan5 <- data_for_creatinine$Creatinine<5
LessThan5 <- data_for_creatinine$Creatinine
LessThan5[! idxLessThan5]=NA
data_for_creatinine <- data_for_creatinine %>% add_column( LessThan5 = LessThan5)
ggplot(data_for_creatinine) + stat_density(aes(data_for_creatinine$Creatinine), adjust = 2, alpha=1, col=1,geom="line") +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold")) +
stat_density(aes(data_for_creatinine$LessThan5), adjust = 2, alpha=1, fill=2, col=2,geom="line")
g <- ggplot(data %>% filter(Creatinine<5), aes(y=Creatinine))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event)), coef=2.5) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender)), coef=2.5) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking)), coef=2.5) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes)), coef=2.5) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP)), coef=2.5) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia)), coef=2.5) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("Creatinine",
face="bold"))
ggplot(data) + stat_density(aes(CPK), adjust = 2,
alpha=0.8) +
theme_minimal() + labs(y="Density") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=13,face="bold"),
legend.title =element_text(size=13,face="bold") ,
legend.text =element_text(size=12,face="bold"))
g <- ggplot(data %>% filter(CPK<4000), aes(y=CPK))
g1 <- g + geom_boxplot(aes(x=as.factor(Event), color=as.factor(Event))) +
labs(title="",x="", y = "", color="Event")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g2 <- g + geom_boxplot(aes(x=as_factor(Gender), color=as.factor(Gender))) +
labs(title="",x="", y = "", color="Gender")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g3 <- g + geom_boxplot(aes(x=as_factor(Smoking), color=as.factor(Smoking))) +
labs(title="",x="", y = "", color="Smoking")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g4 <- g + geom_boxplot(aes(x=as_factor(Diabetes), color=as.factor(Diabetes))) +
labs(title="",x="", y = "", color="Diabetes")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g5 <- g + geom_boxplot(aes(x=as_factor(BP), color=as.factor(BP))) +
labs(title="",x="", y = "", color="BP")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
g6 <- g + geom_boxplot(aes(x=as_factor(Anaemia), color=as.factor(Anaemia))) +
labs(title="",x="", y = "", color="Anaemia")  +
scale_fill_brewer(palette="Blues") +
theme_minimal()
ggarrange(g1,g2,g3,g4,g5,g6,
ncol = 3, nrow = 2) %>% annotate_figure(top=text_grob("CPK",
face="bold"))
col <- scale_color_gradient(high=1, low = 0,
n.breaks=4,
breaks = waiver())
g <- ggplot(data, aes(col=Event))
g1 <- g + geom_point(aes(x=Sodium, y=Age),lwd=1)
g2 <- g + geom_point(aes(x=Sodium,  y=Creatinine),lwd=1)
g3 <- g + geom_point(aes(x=Sodium, y=CPK),lwd=1)
g4 <- g + geom_point(aes(x=Sodium, y=Pletelets),lwd=1)
g5 <- g + geom_point(aes(x=Sodium, y=Ejection.Fraction),lwd=1)
g6 <- g + geom_point(aes(x=CPK, y=Age),lwd=1)
g7 <- g + geom_point(aes(x=CPK, y=Creatinine),lwd=1)
g8 <- g + geom_point(aes(x=CPK, y=Pletelets),lwd=1)
g9 <- g + geom_point(aes(x=CPK, y=Ejection.Fraction),lwd=1)
g10 <- g + geom_point(aes(x=Pletelets, y=Creatinine),lwd=1)
g11 <- g + geom_point(aes(x=Pletelets, y=Age),lwd=1)
g12 <- g + geom_point(aes(x=Pletelets, y=Ejection.Fraction),lwd=1)
g13 <- g + geom_point(aes(x=Age, y=CPK), lwd=1)
g14 <- g + geom_point(aes(x=Age, y=Ejection.Fraction), lwd=1)
g15 <- g + geom_point(aes(x=CPK, y=Ejection.Fraction), lwd=1)
ggarrange(g1,g2,g3,g4,g5,g6,g7,g8,g9,g10,g11,g12,g13,g14,g15,
ncol = 3, nrow = 5) %>%
annotate_figure(top=text_grob("Distribution of events over pairs of var",
face="bold"))
eventYN <- as.factor(data$Event)
levels(eventYN)<- c("Yes", "No")
pGender <- prop.table(table(Event=eventYN, Gender = data$Gender),2)
pSmoke <- prop.table(table(Event=eventYN, smoking=data$Smoking),2)
pDiab <- prop.table(table(Event=eventYN, Diabetes=data$Diabetes),2)
pBP <- prop.table(table(Event=eventYN, BP=data$BP),2)
pAnaemia <- prop.table(table(Event=eventYN, Anaemia=data$Anaemia),2)
barplot( pGender[,1])
barplot( pGender[,2])
heatmap(pSmoke)
heatmap(pDiab)
image(pBP)
m <- matrix(c(1,0.5,0.5,0.5), ncol=2)
s1 <- Surv(data$TIME, data$Event)
surv_m1 <- survfit(s1~data$Gender, error="greenwood",
conf.type="log", se.fit=TRUE, conf.int=0.95,
data=data)
par(mfrow=c(3,2))
g <- list()
# Evento <- as.numeric(levels(as.factor(data$Event)))[as.factor(data$Event)]
# data$Evento=Evento
g[[1]] <- ggsurvplot(survfit(Surv(TIME, (Event))~Gender, data=data.table),
conf.int=T, pval.method=T, log.rank.weights="1", data=data)
g[[2]] <- ggsurvplot(survfit(Surv(TIME, (Event))~Smoking, data=data.table),
conf.int=T, pval.method=T, log.rank.weights="1", data=data.table)
g[[3]] <- ggsurvplot(survfit(Surv(TIME, (Event))~Diabetes, data=data.table),
conf.int=T, pval.method=T, log.rank.weights="1", data=data.table)
g[[4]] <- ggsurvplot(survfit(Surv(TIME, (Event))~BP, data=data.table),
conf.int=T, pval.method=T, log.rank.weights="1", data=data.table)
g[[5]] <- ggsurvplot(survfit(Surv(TIME, (Event))~Anaemia, data=data.table),
conf.int=T, pval.method=T, log.rank.weights="1", data=data.table)
# g1
# g2
# g3
# g4
# g5
arrange_ggsurvplots(g, print = TRUE,
ncol = 2, nrow = 3, risk.table.height = 0.4)
# ggarrange(g1,g2,g3,g4,g5,
#           ncol = 2, nrow = 3) %>%
#   annotate_figure(top=text_grob("Distribution of events over pairs of var",
#                                 face="bold"))
ss <- survdiff(Surv(TIME, Event)~Gender+Smoking+Diabetes+BP+Anaemia, data=data.table, rho=0)
# ggsurvplot(surv_fit(Surv(TIME, Event)~Gender+Smoking+Diabetes+BP+Anaemia, data=data))
df <- nrow(ss$var)-1
exponential_survreg <- survreg(Surv(TIME,Event)~Gender+Smoking+Diabetes+BP+
Anaemia+Age+Ejection.Fraction+Creatinine+Pletelets,
data=data.table, dist="weibull")
summary(exponential_survreg)$table %>% round(2)
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Diabetes+
Smoking:Pletelets+
Smoking:BP+
Smoking:Anaemia+
Smoking:Age+
Smoking:Ejection.Fraction+
Smoking:Creatinine+
Gender+Diabetes+Pletelets+BP+Anaemia+Age+Ejection.Fraction+Creatinine,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0 )
s <- summary(final)
s$table %>% round(2)
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Pletelets:Diabetes+
Pletelets:Pletelets+
Pletelets:BP+
Pletelets:Anaemia+
Pletelets:Age+
Pletelets:Ejection.Fraction+
Pletelets:Creatinine+
Diabetes+Pletelets+BP+Anaemia+Age+Ejection.Fraction+Creatinine,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0)
s <- summary(final)
s$table %>% round(2)
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Pletelets:Diabetes+
Pletelets:Pletelets+
Pletelets:BP+
Pletelets:Anaemia+
Pletelets:Age+
Pletelets:Ejection.Fraction+
Pletelets:Creatinine+
Diabetes+Pletelets+BP+Anaemia+Age+Ejection.Fraction+Creatinine+Gender,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0)
s <- summary(final)
# s$table %>% round(2)
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Anaemia:Diabetes+
Anaemia:BP+
Anaemia:Ejection.Fraction+
Anaemia:Creatinine+
Diabetes+Pletelets+BP+Anaemia+Age+Ejection.Fraction+Creatinine+Gender,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0)
s <- summary(final)
# s$table %>% round(2)
# drop Anaemia
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Age:Diabetes+
Age:BP+
Age:Ejection.Fraction+
Age:Creatinine+
Pletelets+Age+Diabetes+BP+Ejection.Fraction+Creatinine+Gender,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0)
s <- summary(final)
# s$table %>% round(2)
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Age:Ejection.Fraction+
Diabetes:BP+
Diabetes:Creatinine+
Diabetes:Ejection.Fraction+
Pletelets+Age+Diabetes+BP+Ejection.Fraction+Creatinine+Gender,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0)
s <- summary(final)
# s$table %>% round(2)
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Age:Ejection.Fraction+
Diabetes:Ejection.Fraction+
BP:Creatinine+
BP:Ejection.Fraction+
Pletelets+Age+Diabetes+BP+Ejection.Fraction+Creatinine+Gender,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0)
s <- summary(final)
# s$table %>% round(2)
exponential_survreg <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Age:Ejection.Fraction+
Diabetes:Ejection.Fraction+
Creatinine:Ejection.Fraction+
Pletelets+Age+Diabetes+BP+Ejection.Fraction+Creatinine+Gender,
data=data.table, dist="weibull")
final <- stepAIC(exponential_survreg, trace=0)
s <- summary(final)
# s$table %>% round(2)
# final model
final <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Age:Ejection.Fraction+
Diabetes:Ejection.Fraction+
Creatinine:Ejection.Fraction+
Pletelets+Age+Diabetes+BP+Ejection.Fraction+Gender,
data=data.table, dist="weibull")
summary(final)$table %>% row.names()
# final model
final <- survreg(Surv(TIME,Event)~
Smoking:Gender+
Smoking:Age+
Pletelets:Gender+
Age:Ejection.Fraction+
Diabetes:Ejection.Fraction+
Creatinine:Ejection.Fraction+
Pletelets+Age+Diabetes+BP+Ejection.Fraction+Gender,
data=data.table, dist="weibull", scale=1)
s <- summary(final)
s$table[,c(1,4)] %>% round(2)
y_pred= predict(final, na.action = "na.omit", type="linear")
rS <- ( log(data.table$TIME) - y_pred ) # res standardizzati
rSo = sort(unique(rS))
Sres = survfit(Surv(rS,data.table$Event)~1, ctype=2 ) # "fleming-harrington"
plot(rSo,log(-log(Sres$surv)), xlim=c(-7,1),
xlab="Cox-Snell residuals",
ylab="Log of Cumulative Lazard",
main="Bounty of the Final Survival Model")
abline(0,1, col=2, lwd=3)
m1 <- glm(Event ~ CPK + Creatinine, data=data, family=binomial, )
summary(m1)
m2 <- glm(Event ~ CPK + I(CPK^2) + I(CPK^3) , data=data, family=binomial)
summary(m2)
r1 <- as.matrix(round(summary(m1)$coef[2:3,4],2))
colnames(r1) <- "Pval"
r2 <- as.matrix(round(summary(m2)$coef[2:4,4],2))
colnames(r2) <- "Pval"
desc_outer <- makeResampleDesc("Holdout", split = 4/5, stratify = TRUE)
library(tidyverse)
library(gridExtra)
library(GGally)
library(ggthemes) # Load
library(ggpubr)
library(survival)
library(survminer)
library(MASS)
library(skimr)
library(corrplot)
library(tidyverse)
setwd("~/Desktop/ML/MLHeartAttacks")
# setwd("C:/Users/marit/OneDrive - Université Libre de Bruxelles/Bureau/BDMA/UPC/ML/PROJECT")
data <- read.csv('Heart failure.csv', sep=";") #heart....
data.table <- data
data <- data %>% as_tibble()
n <- nrow(data)
desc_outer <- makeResampleDesc("Holdout", split = 4/5, stratify = TRUE)
??makeResampleDesc
library(mlr)
desc_outer <- makeResampleDesc("Holdout", split = 4/5, stratify = TRUE)
Classif_Task <- makeClassifTask(id = "HeartFailure", data = data2, target = "Event", positive = 1)
knitr::opts_chunk$set(echo = TRUE)
data2 <- data %>% dplyr::select(-TIME)
Classif_Task <- makeClassifTask(id = "HeartFailure", data = data2, target = "Event", positive = 1)
set.seed(1234)
partition_outer <- makeResampleInstance(desc_outer, Classif_Task)
set.seed(1234)
partition_outer <- makeResampleInstance(desc_outer, Classif_Task)
data_features <- data2 %>% dplyr::select(Creatinine, Ejection.Fraction, Diabetes, Sodium, Event)
# Define again the partition (exactly the same just with less features)
desc_outer <- makeResampleDesc("Holdout", split = 4/5, stratify = TRUE)
Classif_Task <- makeClassifTask(id = "HeartFailure", data = data_features, target = "Event", positive = 1)
set.seed(1234)
partition_outer <- makeResampleInstance(desc_outer, Classif_Task)
library(mlr3)
bls <- list(makeLearner("classif.kknn"),
makeLearner("classif.rpart"),
makeLearner("classif.randomForest"),
makeLearner("classif.ranger"),
makeLearner("classif.svm"),
makeLearner("classif.ada"))
install.packages("kknn")
install.packages("kknn")
bls <- list(makeLearner("classif.kknn"),
makeLearner("classif.rpart"),
makeLearner("classif.randomForest"),
makeLearner("classif.ranger"),
makeLearner("classif.svm"),
makeLearner("classif.ada"))
makeLearner("ranger"),
makeLearner("ranger")
makeLearner("ranger")
install.packages("ranger")
library(mlr3)
bls <- list(makeLearner("classif.kknn"),
makeLearner("classif.rpart"),
makeLearner("classif.randomForest"),
makeLearner("classif.ranger"),
makeLearner("classif.svm"),
makeLearner("classif.ada"))
lrn <- makeModelMultiplexer(bls)
# Parameter Space (all together, divided by learner inside)
ps <- makeModelMultiplexerParamSet(
multiplexer = lrn,
classif.kknn = makeParamSet(makeIntegerParam("k", lower = 5, upper = 15)), # Default is 7-
classif.rpart = makeParamSet(makeIntegerParam("minsplit", lower = 15, upper = 35), # Default is 20
makeIntegerParam("maxdepth", lower = 5, upper = 15)), # Default is 30
classif.randomForest = makeParamSet(makeIntegerParam("ntree", lower = 100, upper = 1500), #Default is 500
makeIntegerParam("mtry",lower = 2, upper = 4), #Default is floor(sqrt(features/3)), cannot be larger than number of variables
makeIntegerParam("nodesize", lower = 10, upper = 50)), #Default is 1
classif.ranger = makeParamSet(makeIntegerParam("mtry", lower = 2, upper = 4), # Same parameters as randomForest
makeIntegerParam("num.trees", lower = 100, upper = 1500),
makeIntegerParam("min.node.size", lower = 10, upper = 50)),
classif.svm = makeParamSet(makeNumericParam("cost", lower = 0.1, upper = 10), # Default is 1
makeNumericParam("gamma", lower = 0.05, upper = 5)), # Default is (1/data dimension)
classif.ada = makeParamSet(makeNumericParam("nu", lower = 0.05, upper = 5),
makeIntegerParam("iter", lower = 20, upper = 200))
)
# Validation
desc_inner <- makeResampleDesc("CV", iters = 4)
control_grid <- makeTuneControlRandom(maxit = 200L)  # 10 random values in each model
set.seed(1234)
tuning <- makeTuneWrapper(learner = lrn,
resampling = desc_inner,
par.set = ps,
control = control_grid,
measures = list(tpr),
show.info = TRUE)
